import wizard
from osv import osv
import pooler

_form = '''<?xml version="1.0"?>
<form string="Connect to MySQL DB configuration">
	<field name="host" colspan="2"/>
	<field name="port" colspan="2"/>
	<field name="passwd" colspan="2"/>
	<field name="user" colspan="2"/>
	<field name="db_name" colspan="2"/>
</form>'''

def _load_data(self, cr, uid, data, ctx={}):
	pool = pooler.get_pool(cr.dbname)
	obj = pool.get('it.con_config')
	id = obj.search(cr, uid, [])
	if len(id) != 0:
		config = obj.read(cr, uid, id, {})[0]
		if len(config) > 1:
			data['form']['host'] = config['host']
			data['form']['port'] = config['port']
			data['form']['user'] = config['user']
			data['form']['passwd'] = config['passwd']
			data['form']['db_name'] = config['db_name']
		form = data['form']
	return data['form']

def _save_data(self, cr, uid, data, context):
	pool = pooler.get_pool(cr.dbname)
	obj = pool.get('it.con_config')
	id = obj.search(cr, uid, [])
	obj.write(cr, uid, id, data['form'])
	return {}

_fields = {
	'host': {'string':'Host', 'type':'char', 'size':15, 'required':True},
	'port': {'string':'Port', 'type':'integer'},
	'user': {'string':'Username', 'type':'char', 'size':32, 'required':True},
	'passwd': {'string':'Password', 'type':'char', 'size':16, 'required':True, 'invisible':True},
	'db_name': {'string':'DB name', 'type':'char', 'size':32, 'required':True},
}

class wiz_mailbox(wizard.interface):
	states = {
		'init': {
			'actions': [_load_data],
			'result': {'type': 'form', 'arch':_form, 'fields':_fields, 'state':[('end','Cancel'),('save','Save')]}
		},
		'save': {
			'actions': [_save_data],
			'result': {'type':'state', 'state':'end'}
		}
	}
wiz_mailbox('it.con_config.menu')

